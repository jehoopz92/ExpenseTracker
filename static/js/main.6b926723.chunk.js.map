{"version":3,"sources":["components/Header/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance/Balance.js","components/IncomeExpenses/IncomeExpenses.js","components/Transaction/Transaction.js","components/TransactionList/TransactionList.js","components/AddTransaction/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b926723.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n  return <h2>Expense Tracker</h2>;\r\n};\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          transaction => transaction.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Init State\r\nconst initialState = {\r\n  transactions: []\r\n};\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n  return (\r\n    <>\r\n      <div className='inc-exp-container'>\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className='money plus'>{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p className='money minus'>{expense}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text}{' '}\r\n      <span>\r\n        {sign}${Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        className='delete-btn'\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Transaction } from '../Transaction/Transaction';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className='list'>\r\n        {transactions.map(transaction => (\r\n          <Transaction transaction={transaction} key={transaction.id} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n  };\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='form-control'>\r\n          <label htmlFor='text'>Text</label>\r\n          <input\r\n            type='text'\r\n            value={text}\r\n            onChange={e => setText(e.target.value)}\r\n            placeholder='Enter text...'\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label htmlFor='amount'>\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type='number'\r\n            value={amount}\r\n            onChange={e => setAmount(e.target.value)}\r\n            placeholder='Enter amount...'\r\n          />\r\n        </div>\r\n        <button className='btn'>Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\n\nimport { Header } from './components/Header/Header';\nimport { Balance } from './components/Balance/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList/TransactionList';\nimport { AddTransaction } from './components/AddTransaction/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className='container'>\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}